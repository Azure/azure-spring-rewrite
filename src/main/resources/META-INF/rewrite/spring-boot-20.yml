#
# Copyright 2021 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
########################################################################################################################
# SpringBoot 2.0
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_0
displayName: Migrate to Spring Boot 2.0 from Spring Boot 1.5
description: >
  Migrate applications built on Spring Boot 1.5 to the latest Spring Boot 2.0 release. This recipe will modify an
  application's build files, make changes to deprecated/preferred APIs, and migrate configuration settings that have
  changes between versions. This recipe will also chain additional framework migrations (Spring Framework, Spring Data,
  etc) that are required as part of the migration to Spring Boot 2.0.
tags:
  - spring
  - boot
recipeList:
  # Upgrade 2.0.x from 1.x
  - org.openrewrite.maven.UpgradeDependencyVersion:
      groupId: org.springframework.boot
      artifactId: "*"
      newVersion: 2.0.x
      overrideManagedVersion: true
  - org.openrewrite.maven.UpgradeParentVersion:
      groupId: org.springframework.boot
      artifactId: spring-boot-starter-parent
      newVersion: 2.0.x
  - org.openrewrite.maven.UpgradeDependencyVersion:
      groupId: org.mockito
      artifactId: "*"
      newVersion: 3.x
      overrideManagedVersion: true
  - org.openrewrite.maven.RemoveProperty:
      propertyName: thymeleaf.version
  - org.openrewrite.maven.RemoveDependency:
      groupId: org.webjars
      artifactId: webjars-locator
  - org.openrewrite.java.spring.boot2.MigrateToWebServerFactoryCustomizer
  - org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_0
  - org.openrewrite.java.spring.boot2.MigrateSpringBootServletInitializerPackageName
  - org.openrewrite.java.spring.boot2.MigrateHttpMessageConvertersPackageName
  - org.openrewrite.java.spring.boot2.MigrateErrorControllerPackageName
  - org.openrewrite.java.spring.boot2.MigrateHibernateContraintsToJavax
  - org.openrewrite.java.spring.boot2.MigrateLocalServerPortAnnotation

  # Update properties
  - org.openrewrite.java.spring.boot2.SpringBootProperties_2_0

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.boot2.MigrateToWebServerFactoryCustomizer
displayName: Use `WebServerFactoryCustomizer`
description: >
  Use `WebServerFactoryCustomizer` instead of the deprecated `EmbeddedServletContainerCustomizer` in
  Spring Boot 2.0 or higher. This recipe will replace look for any classes that implement `EmbeddedServletContainerCustomizer`
  and change the interface to `WebServerFactoryCustomizer<ConfigurableServletWebServerFactory>`. This recipe also adjusts
  the the types used in the `customize()` method from `*EmbeddedServletContainerFactory` to their `*ServletWebServerFactory`
  counterparts.

recipeList:
  - org.openrewrite.java.spring.boot2.ChangeEmbeddedServletContainerCustomizer
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.boot.context.embedded.ConfigurableEmbeddedServletContainer
      newFullyQualifiedTypeName: org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory
      newFullyQualifiedTypeName: org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainerFactory
      newFullyQualifiedTypeName: org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.boot.context.embedded.undertow.UnderTowEmbeddedServletContainerFactory
      newFullyQualifiedTypeName: org.springframework.boot.web.embedded.undertow.UnderTowServletWebServerFactory


---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.boot2.MigrateSpringBootServletInitializerPackageName
displayName: Use `org.springframework.boot.web.servlet.support.SpringBootServletInitializer`
description: Use `org.springframework.boot.web.servlet.support.SpringBootServletInitializer` instead of the deprecated `org.springframework.boot.web.support.SpringBootServletInitializer` in Spring Boot 1.4 or higher.
recipeList:
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.boot.web.support.SpringBootServletInitializer
      newFullyQualifiedTypeName: org.springframework.boot.web.servlet.support.SpringBootServletInitializer

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.boot2.MigrateHttpMessageConvertersPackageName
displayName: Use `org.springframework.boot.autoconfigure.http.HttpMessageConverters`
description: Use `org.springframework.boot.autoconfigure.http.HttpMessageConverters` instead of the deprecated `org.springframework.boot.autoconfigure.web.HttpMessageConverters` in Spring Boot 2.0 or higher.
recipeList:
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.boot.autoconfigure.web.HttpMessageConverters
      newFullyQualifiedTypeName: org.springframework.boot.autoconfigure.http.HttpMessageConverters

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.boot2.MigrateErrorControllerPackageName
displayName: Use `org.springframework.boot.web.servlet.error.ErrorController`
description: Use `org.springframework.boot.web.servlet.error.ErrorController` instead of the deprecated `org.springframework.boot.autoconfigure.web.ErrorController` in Spring Boot 2.0 or higher.
recipeList:
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.boot.autoconfigure.web.ErrorController
      newFullyQualifiedTypeName: org.springframework.boot.web.servlet.error.ErrorController

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.boot2.MigrateHibernateContraintsToJavax
displayName: Use `javax.validation.constraints`
description: Use `javax.validation.constraints` instead of the deprecated `org.hibernate.validator.constraints` in Spring Boot 2.0 or higher.
recipeList:
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.hibernate.validator.constraints.NotBlank
      newFullyQualifiedTypeName: javax.validation.constraints.NotBlank
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.hibernate.validator.constraints.NotEmpty
      newFullyQualifiedTypeName: javax.validation.constraints.NotEmpty
  - org.openrewrite.maven.AddDependency:
      groupId: javax.validation
      artifactId: validation-api
      version: 2.x
      onlyIfUsing: javax.validation.constraints.*

---
########################################################################################################################
# SpringBoot 2.0 Configuration Changes
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.boot2.SpringBootProperties_2_0
displayName: Migrate Spring Boot properties to 2.0
description: Migrate properties found in `application.properties` and `application.yml`.
recipeList:
  - org.openrewrite.properties.ChangePropertyValue:
      propertyKey: spring.main.banner-mode
      oldValue: true
      newValue: console
  - org.openrewrite.properties.ChangePropertyValue:
      propertyKey: spring.main.banner-mode
      oldValue: false
      newValue: "off"
  #############################################################
  # Generated property key changes
  #############################################################
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.main.show-banner
      newPropertyKey: spring.main.banner-mode
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.main.web-environment
      newPropertyKey: spring.main.web-application-type
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: banner.charset
      newPropertyKey: spring.banner.charset
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: banner.image.height
      newPropertyKey: spring.banner.image.height
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: banner.image.invert
      newPropertyKey: spring.banner.image.invert
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: banner.image.location
      newPropertyKey: spring.banner.image.location
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: banner.image.margin
      newPropertyKey: spring.banner.image.margin
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: banner.image.width
      newPropertyKey: spring.banner.image.width
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: banner.location
      newPropertyKey: spring.banner.location
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: security.filter-dispatcher-types
      newPropertyKey: spring.security.filter.dispatcher-types
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: security.filter-order
      newPropertyKey: spring.security.filter.order
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.data.cassandra.repositories.enabled
      newPropertyKey: spring.data.cassandra.repositories.type
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.data.couchbase.repositories.enabled
      newPropertyKey: spring.data.couchbase.repositories.type
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.data.mongodb.repositories.enabled
      newPropertyKey: spring.data.mongodb.repositories.type
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.jta.bitronix.properties.background-recovery-interval
      newPropertyKey: spring.jta.bitronix.properties.background-recovery-interval-seconds
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.mvc.media-types
      newPropertyKey: spring.mvc.contentnegotiation.media-types
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.baseline-description
      newPropertyKey: spring.flyway.baseline-description
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.baseline-on-migrate
      newPropertyKey: spring.flyway.baseline-on-migrate
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.baseline-version
      newPropertyKey: spring.flyway.baseline-version
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.check-location
      newPropertyKey: spring.flyway.check-location
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.clean-on-validation-error
      newPropertyKey: spring.flyway.clean-on-validation-error
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.enabled
      newPropertyKey: spring.flyway.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.encoding
      newPropertyKey: spring.flyway.encoding
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.init-sqls
      newPropertyKey: spring.flyway.init-sqls
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.locations
      newPropertyKey: spring.flyway.locations
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.out-of-order
      newPropertyKey: spring.flyway.out-of-order
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.password
      newPropertyKey: spring.flyway.password
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.placeholder-prefix
      newPropertyKey: spring.flyway.placeholder-prefix
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.placeholder-replacement
      newPropertyKey: spring.flyway.placeholder-replacement
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.placeholder-suffix
      newPropertyKey: spring.flyway.placeholder-suffix
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.placeholders
      newPropertyKey: spring.flyway.placeholders
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.schemas
      newPropertyKey: spring.flyway.schemas
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.sql-migration-prefix
      newPropertyKey: spring.flyway.sql-migration-prefix
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.sql-migration-separator
      newPropertyKey: spring.flyway.sql-migration-separator
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.sql-migration-suffix
      newPropertyKey: spring.flyway.sql-migration-suffixes
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.table
      newPropertyKey: spring.flyway.table
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.target
      newPropertyKey: spring.flyway.target
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.url
      newPropertyKey: spring.flyway.url
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.user
      newPropertyKey: spring.flyway.user
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: flyway.validate-on-migrate
      newPropertyKey: spring.flyway.validate-on-migrate
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.change-log
      newPropertyKey: spring.liquibase.change-log
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.check-change-log-location
      newPropertyKey: spring.liquibase.check-change-log-location
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.contexts
      newPropertyKey: spring.liquibase.contexts
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.default-schema
      newPropertyKey: spring.liquibase.default-schema
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.drop-first
      newPropertyKey: spring.liquibase.drop-first
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.enabled
      newPropertyKey: spring.liquibase.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.labels
      newPropertyKey: spring.liquibase.labels
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.parameters
      newPropertyKey: spring.liquibase.parameters
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.password
      newPropertyKey: spring.liquibase.password
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.rollback-file
      newPropertyKey: spring.liquibase.rollback-file
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.url
      newPropertyKey: spring.liquibase.url
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: liquibase.user
      newPropertyKey: spring.liquibase.user
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: security.user.name
      newPropertyKey: spring.security.user.name
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: security.user.password
      newPropertyKey: spring.security.user.password
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: security.user.role
      newPropertyKey: spring.security.user.roles
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.context-parameters
      newPropertyKey: server.servlet.context-parameters
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.context-path
      newPropertyKey: server.servlet.context-path
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.display-name
      newPropertyKey: server.servlet.application-display-name
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.jsp-servlet.class-name
      newPropertyKey: server.servlet.jsp.class-name
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.jsp-servlet.init-parameters
      newPropertyKey: server.servlet.jsp.init-parameters
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.jsp-servlet.registered
      newPropertyKey: server.servlet.jsp.registered
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.servlet-path
      newPropertyKey: server.servlet.path
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.cookie.comment
      newPropertyKey: server.servlet.session.cookie.comment
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.cookie.domain
      newPropertyKey: server.servlet.session.cookie.domain
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.cookie.http-only
      newPropertyKey: server.servlet.session.cookie.http-only
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.cookie.max-age
      newPropertyKey: server.servlet.session.cookie.max-age
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.cookie.name
      newPropertyKey: server.servlet.session.cookie.name
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.cookie.path
      newPropertyKey: server.servlet.session.cookie.path
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.cookie.secure
      newPropertyKey: server.servlet.session.cookie.secure
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.persistent
      newPropertyKey: server.servlet.session.persistent
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.store-dir
      newPropertyKey: server.servlet.session.store-dir
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.timeout
      newPropertyKey: server.servlet.session.timeout
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: server.session.tracking-modes
      newPropertyKey: server.servlet.session.tracking-modes
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.batch.initializer.enabled
      newPropertyKey: spring.batch.initialize-schema
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.data.cassandra.connect-timeout-millis
      newPropertyKey: spring.data.cassandra.connect-timeout
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.data.cassandra.read-timeout-millis
      newPropertyKey: spring.data.cassandra.read-timeout
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.datasource.initialize
      newPropertyKey: spring.datasource.initialization-mode
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.flyway.sql-migration-suffix
      newPropertyKey: spring.flyway.sql-migration-suffixes
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.git.properties
      newPropertyKey: spring.info.git.location
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.http.multipart.enabled
      newPropertyKey: spring.servlet.multipart.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.http.multipart.file-size-threshold
      newPropertyKey: spring.servlet.multipart.file-size-threshold
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.http.multipart.location
      newPropertyKey: spring.servlet.multipart.location
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.http.multipart.max-file-size
      newPropertyKey: spring.servlet.multipart.max-file-size
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.http.multipart.max-request-size
      newPropertyKey: spring.servlet.multipart.max-request-size
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.http.multipart.resolve-lazily
      newPropertyKey: spring.servlet.multipart.resolve-lazily
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.messages.cache-seconds
      newPropertyKey: spring.messages.cache-duration
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.redis.pool.max-active
      newPropertyKey: spring.redis.jedis.pool.max-idle
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.redis.pool.max-idle
      newPropertyKey: spring.redis.jedis.pool.max-idle
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.redis.pool.max-wait
      newPropertyKey: spring.redis.jedis.pool.max-wait
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.redis.pool.min-idle
      newPropertyKey: spring.redis.jedis.pool.min-idle
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.resources.cache-period
      newPropertyKey: spring.resources.cache.period
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.session.jdbc.initializer.enabled
      newPropertyKey: spring.session.jdbc.initialize-schema
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.session.mongo.collection-name
      newPropertyKey: spring.session.mongodb.collection-name
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.thymeleaf.content-type
      newPropertyKey: spring.thymeleaf.servlet.content-type
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.auditevents.enabled
      newPropertyKey: management.endpoint.auditevents.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.auditevents.path
      newPropertyKey: management.endpoints.web.path-mapping.auditevents
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.autoconfig.enabled
      newPropertyKey: management.endpoint.conditions.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.autoconfig.path
      newPropertyKey: management.endpoints.web.path-mapping.conditions
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.beans.enabled
      newPropertyKey: management.endpoint.beans.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.beans.path
      newPropertyKey: management.endpoints.web.path-mapping.beans
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.configprops.enabled
      newPropertyKey: management.endpoint.configprops.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.configprops.keys-to-sanitize
      newPropertyKey: management.endpoint.configprops.keys-to-sanitize
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.configprops.path
      newPropertyKey: management.endpoints.web.path-mapping.configprops
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.cors.allow-credentials
      newPropertyKey: management.endpoints.web.cors.allow-credentials
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.cors.allowed-headers
      newPropertyKey: management.endpoints.web.cors.allowed-headers
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.cors.allowed-methods
      newPropertyKey: management.endpoints.web.cors.allowed-methods
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.cors.allowed-origins
      newPropertyKey: management.endpoints.web.cors.allowed-origins
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.cors.exposed-headers
      newPropertyKey: management.endpoints.web.cors.exposed-headers
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.cors.max-age
      newPropertyKey: management.endpoints.web.cors.max-age
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.dump.enabled
      newPropertyKey: management.endpoint.threaddump.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.dump.path
      newPropertyKey: management.endpoints.web.path-mapping.dump
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.enabled
      newPropertyKey: management.endpoints.enabled-by-default
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.env.enabled
      newPropertyKey: management.endpoint.env.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.env.keys-to-sanitize
      newPropertyKey: management.endpoint.env.keys-to-sanitize
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.env.path
      newPropertyKey: management.endpoints.web.path-mapping.env
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.flyway.enabled
      newPropertyKey: management.endpoint.flyway.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.health.enabled
      newPropertyKey: management.endpoint.health.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.health.mapping
      newPropertyKey: management.health.status.http-mapping
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.health.path
      newPropertyKey: management.endpoints.web.path-mapping.health
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.health.time-to-live
      newPropertyKey: management.endpoint.health.cache.time-to-live
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.heapdump.enabled
      newPropertyKey: management.endpoint.heapdump.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.heapdump.path
      newPropertyKey: management.endpoints.web.path-mapping.heapdump
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.info.enabled
      newPropertyKey: management.endpoint.info.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.info.path
      newPropertyKey: management.endpoints.web.path-mapping.info
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.jmx.domain
      newPropertyKey: management.endpoints.jmx.domain
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.jmx.enabled
      newPropertyKey: management.endpoints.jmx.exposure.exclude
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.jmx.static-names
      newPropertyKey: management.endpoints.jmx.static-names
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.jmx.unique-names
      newPropertyKey: management.endpoints.jmx.unique-names
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.jolokia.enabled
      newPropertyKey: management.endpoint.jolokia.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.jolokia.path
      newPropertyKey: management.endpoints.web.path-mapping.jolokia
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.liquibase.enabled
      newPropertyKey: management.endpoint.liquibase.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.logfile.enabled
      newPropertyKey: management.endpoint.logfile.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.logfile.external-file
      newPropertyKey: management.endpoint.logfile.external-file
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.logfile.path
      newPropertyKey: management.endpoints.web.path-mapping.logfile
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.loggers.enabled
      newPropertyKey: management.endpoint.loggers.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.loggers.path
      newPropertyKey: management.endpoints.web.path-mapping.loggers
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.mappings.enabled
      newPropertyKey: management.endpoint.mappings.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.mappings.path
      newPropertyKey: management.endpoints.web.path-mapping.mappings
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.metrics.enabled
      newPropertyKey: management.endpoint.metrics.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.metrics.path
      newPropertyKey: management.endpoints.web.path-mapping.metrics
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.shutdown.enabled
      newPropertyKey: management.endpoint.shutdown.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.shutdown.path
      newPropertyKey: management.endpoints.web.path-mapping.shutdown
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.trace.filter.enabled
      newPropertyKey: management.trace.http.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.trace.enabled
      newPropertyKey: management.endpoint.httptrace.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: endpoints.trace.path
      newPropertyKey: management.endpoints.web.path-mapping.httptrace
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: jolokia.config
      newPropertyKey: management.endpoint.jolokia.config
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.add-application-context-header
      newPropertyKey: management.server.add-application-context-header
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.address
      newPropertyKey: management.server.address
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.context-path
      newPropertyKey: management.server.servlet.context-path
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.port
      newPropertyKey: management.server.port
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.ciphers
      newPropertyKey: management.server.ssl.ciphers
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.client-auth
      newPropertyKey: management.server.ssl.client-auth
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.enabled
      newPropertyKey: management.server.ssl.enabled
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.enabled-protocols
      newPropertyKey: management.server.ssl.enabled-protocols
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.key-alias
      newPropertyKey: management.server.ssl.key-alias
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.key-password
      newPropertyKey: management.server.ssl.key-password
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.key-store
      newPropertyKey: management.server.ssl.key-store
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.key-store-password
      newPropertyKey: management.server.ssl.key-store-password
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.key-store-provider
      newPropertyKey: management.server.ssl.key-store-provider
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.key-store-type
      newPropertyKey: management.server.ssl.key-store-type
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.protocol
      newPropertyKey: management.server.ssl.protocol
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.trust-store
      newPropertyKey: management.server.ssl.trust-store
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.trust-store-password
      newPropertyKey: management.server.ssl.trust-store-password
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.trust-store-provider
      newPropertyKey: management.server.ssl.trust-store-provider
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.ssl.trust-store-type
      newPropertyKey: management.server.ssl.trust-store-type
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: management.trace.include
      newPropertyKey: management.trace.http.include
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.metrics.export.statsd.host
      newPropertyKey: management.metrics.export.statsd.host
  - org.openrewrite.java.spring.ChangeSpringPropertyKey:
      oldPropertyKey: spring.metrics.export.statsd.port
      newPropertyKey: management.metrics.export.statsd.port
